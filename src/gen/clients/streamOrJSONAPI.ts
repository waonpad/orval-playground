/**
 * Generated by orval v7.11.1 🍺
 * Do not edit manually.
 * Stream or JSON API
 * OpenAPI spec version: 1.0.0
 */
import type { Get200One, Get200Two } from "../schemas";

import { fetcher } from "../../fetcher";

interface TypedResponse<T> extends Response {
  json(): Promise<T>;
}

/**
 * @summary NDJSONストリームまたはJSONを返す
 */
export type getResponse200ApplicationJson = {
  data: Get200One;
  status: 200;
};

export type getResponse200ApplicationXNdjson = {
  stream: TypedResponse<Get200Two>;
  status: 200;
};

export type getResponseComposite = getResponse200ApplicationJson | getResponse200ApplicationXNdjson;

export type getResponse = getResponseComposite & {
  headers: Headers;
};

export const getGetUrl = () => {
  return `${process.env.API_URL}/`;
};

export const get = async (options?: RequestInit): Promise<getResponse> => {
  return fetcher<getResponse>(getGetUrl(), {
    ...options,
    method: "GET",
  });
};
